{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","items","setItems","searchTerm","setSearchTerm","asc","setAsc","desc","setDesc","useEffect","axios","get","then","res","console","log","data","catch","err","sort","a","b","name","className","type","placeholder","onChange","event","target","value","onClick","size","color","filter","item","toLowerCase","includes","map","key","username","company","href","website","email","phone","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QA6EeA,MArEf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGuBF,mBAAS,IAHhC,mBAGNG,EAHM,KAGMC,EAHN,OAISJ,oBAAS,GAJlB,mBAINK,EAJM,KAIDC,EAJC,OAKWN,oBAAS,GALpB,mBAKNO,EALM,KAKAC,EALA,KAyBX,OAlBFC,qBAAU,WACNC,IAAMC,IAAI,8CACLC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZX,EAASW,EAAIG,SAEhBC,OAAM,SAAAC,GACHJ,QAAQC,IAAIG,QAGrB,IACGb,GACFJ,EAAMkB,MAAK,SAACC,EAAEC,GAAH,OAAUD,EAAEE,KAAOD,EAAEC,KAAQ,EAAMD,EAAEC,KAAOF,EAAEE,MAAS,EAAI,KAGpEf,GACFN,EAAMkB,MAAK,SAACC,EAAEC,GAAH,OAAUD,EAAEE,KAAOD,EAAEC,MAAS,EAAMD,EAAEC,KAAOF,EAAEE,KAAQ,EAAI,KAGtE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACI,uBAAOC,KAAK,OAAOC,YAAY,WAAWC,SAAU,SAAAC,GAAUvB,EAAcuB,EAAMC,OAAOC,UACzF,wBAAQC,QAAS,WAAOxB,GAAO,GAAOE,GAAQ,IAA9C,SACE,cAAC,IAAD,CAAwBuB,KAAK,OAAOC,MAAM,YAE5C,wBAAQF,QAAS,WAAOxB,GAAO,GAAQE,GAAQ,IAA/C,SACA,cAAC,IAAD,CAAyBuB,KAAK,OAAOC,MAAM,eAI/C,qBAAKT,UAAU,YAAf,SACE,+BACGtB,EAAMgC,QAAO,SAACC,GACX,MAAmB,KAAf/B,GAEO+B,EAAKZ,KAAKa,cAAcC,SAASjC,EAAWgC,eAD9CD,OACF,KAGNG,KAAI,SAACH,EAAMI,GAAP,OACP,+BACE,6BAAKJ,EAAKZ,OACV,oBAAGC,UAAU,WAAb,kBAA8BW,EAAKK,YACnC,4BAAIL,EAAKM,QAAQlB,OACjB,mBAAGmB,KAAM,WAAWP,EAAKQ,QAASd,OAAO,SAAzC,SACE,cAAC,IAAD,CAAmBG,KAAK,OAAOC,MAAM,YAEvC,mBAAGS,KAAK,wCAAwCb,OAAO,SAAvD,SACE,cAAC,IAAD,CAAgBG,KAAK,OAAOC,MAAM,YAEpC,mBAAGS,KAAM,UAAYP,EAAKS,MAAOf,OAAO,SAAxC,SACE,cAAC,IAAD,CAAYG,KAAK,OAAOC,MAAM,YAEhC,oBAAGT,UAAU,QAAb,UAAqB,cAAC,IAAD,CAAaQ,KAAK,OAAOC,MAAM,UAApD,IAA+DE,EAAKU,WAb7DV,EAAKW,OARlB,aClCKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ccce545f.chunk.js","sourcesContent":["import React from 'react';\nimport {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { AiFillLinkedin, AiFillMail, AiFillPhone, AiOutlineDribbble } from \"react-icons/ai\";\nimport \"./App.css\"\nimport { AiOutlineSortAscending, AiOutlineSortDescending } from \"react-icons/ai\";\nimport \"./Navbar.css\"\n\nfunction App() {\n\n  const [items, setItems] = useState([])\n  const [searchTerm, setSearchTerm] = useState('')\n  const [asc, setAsc] = useState(false)\n  const [desc, setDesc] = useState(true)\n\n  useEffect(() => {\n      axios.get('https://jsonplaceholder.typicode.com/users')\n          .then(res => {\n              console.log(res)\n              setItems(res.data)\n          })\n          .catch(err => {\n              console.log(err)   \n          })\n\n  }, [])\n    if (asc) {\n      items.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\n    }\n\n    if (desc) {\n      items.sort((a,b) => (a.name > b.name) ? -1 : ((b.name > a.name) ? 1 : 0));\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"navbar\">\n            <input type=\"text\" placeholder=\"Search..\" onChange={event => {setSearchTerm(event.target.value)}}/>\n            <button onClick={() => {setAsc(true); setDesc(false)}}>\n              <AiOutlineSortAscending size=\"24px\" color=\"black\"/>\n            </button>\n            <button onClick={() => {setAsc(false); setDesc(true)}}>\n            <AiOutlineSortDescending size=\"24px\" color=\"black\"/>\n            </button>\n            \n        </div>\n        <div className=\"container\">\n          <ul>\n            {items.filter((item) => {\n                if (searchTerm === \"\") {\n                  return item\n                } else if (item.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n                  return item\n                }\n              }).map((item, key) => (\n              <li key={item.id}>\n                <h1>{item.name}</h1>\n                <p className=\"username\">AKA: {item.username}</p>\n                <p>{item.company.name}</p>\n                <a href={'https://'+item.website} target=\"_blank\">\n                  <AiOutlineDribbble size=\"36px\" color=\"black\"/>\n                </a>\n                <a href=\"https://www.linkedin.com/in/cmilagan/\" target=\"_blank\">\n                  <AiFillLinkedin size=\"36px\" color=\"black\"/>\n                </a>\n                <a href={'mailto:' + item.email} target=\"_blank\">\n                  <AiFillMail size=\"36px\" color=\"black\"/>\n                </a>\n                <p className=\"phone\"><AiFillPhone size=\"24px\" color=\"black\"/> {item.phone}</p>\n              </li>\n            ))};\n          </ul>\n        </div>\n  \n      </div>\n    );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}